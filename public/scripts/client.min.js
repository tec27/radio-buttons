!function t(n,e,o){function s(r,c){if(!e[r]){if(!n[r]){var u="function"==typeof require&&require;if(!c&&u)return u(r,!0);if(i)return i(r,!0);throw new Error("Cannot find module '"+r+"'")}var a=e[r]={exports:{}};n[r][0].call(a.exports,function(t){var e=n[r][1][t];return s(e?e:t)},a,a.exports,t,n,e,o)}return e[r].exports}for(var i="function"==typeof require&&require,r=0;r<o.length;r++)s(o[r]);return s}({1:[function(t){var n=angular.module("radio-buttons",["ngAnimate","ngRoute",t("./player"),t("./sockets")]);n.config(["$locationProvider","$routeProvider",function(t){t.html5Mode("true").hashPrefix("!")}]),n.run(["socket",function(t){t.connect()}])},{"./player":2,"./sockets":3}],2:[function(t,n){function e(t){this._socket=t,this.playPause=!1,this.rewind=!1,this.forward=!1,t.on("buttons/play/state",function(t){this.playPause=t}.bind(this)),t.on("buttons/rewind/state",function(t){this.rewind=t}.bind(this)),t.on("buttons/forward/state",function(t){this.forward=t}.bind(this))}function o(t){this._socket=t,this.isPlaying=!1,this.nowPlaying={},t.on("playing",function(){this.isPlaying=!0}.bind(this)),t.on("paused",function(){this.isPlaying=!1}.bind(this)),t.on("nowPlaying",function(t){this.nowPlaying=t}.bind(this))}var s=n.exports="radio-buttons.player",i=angular.module(s,[t("./sockets")]);i.factory("buttonState",["socket",function(t){return new e(t)}]),i.factory("playerState",["socket",function(t){return new o(t)}]),i.controller("PlayerCtrl",["$scope","buttonState","playerState","socket",function(t,n,e,o){t.buttonState=n,t.playerState=e,t.rewind=function(){o.emit("rewind")},t.playOrPause=function(){o.emit(e.isPlaying?"pause":"play")},t.forward=function(){o.emit("forward")}}])},{"./sockets":3}],3:[function(t,n){function e(t,n){this.host=t,this.scope=n,this.connected=!1,this.lastError=null;var e=this;["_onConnect","_onError","_onDisconnect"].forEach(function(t){e[t]=e[t].bind(e)}),this._socketListeners=[],this._socketOnceListeners=[]}var o=n.exports="radio-buttons.sockets",s=angular.module(o,[]);s.factory("socket",["$rootScope",function(t){return new e("/remotes",t)}]),e.prototype.connect=function(){if(this.connected)return this;if(this.socket)this.socket.socket.reconnect();else{this.socket=io.connect(this.host),this.socket.on("connect",this._onConnect).on("error",this._onError).on("disconnect",this._onDisconnect);var t,n;for(t=0,n=this._socketListeners.length;n>t;t++)this.socket.on(this._socketListeners[t].event,this._socketListeners[t].cb);for(t=0,n=this._socketOnceListeners.length;n>t;t++)this.socket.once(this._socketOnceListeners[t].event,this._socketOnceListeners[t].cb);this._socketOnceListeners=[]}return this},e.prototype.disconnect=function(){return this.connected&&this.socket?(this.socket.disconnect(),this):this},e.prototype._onConnect=function(){console.log("socket connected."),this.connected=!0,this.scope.$apply()},e.prototype._onError=function(t){console.log("socket error!"),console.dir(t);var n=this;this.scope.$apply(function(){n.lastError=t})},e.prototype._onDisconnect=function(){console.log("socket disconnected.");var t=this;setTimeout(function(){t.connected=!1,t.scope.$apply()},0)},e.prototype.on=function(t,n){var e=this,o=function(){n.apply(e,arguments),e.scope.$apply()},s={event:t,cb:o};this._socketListeners.push(s),this.socket&&this.socket.on(t,o);var i=!1;return function(){if(!i){i=!0,e.socket.removeListener(t,o);var n=e._socketListeners.indexOf(s);n>=0&&e._socketListeners.splice(n,1)}}},e.prototype.once=function(t,n){var e,o=this,s=function(){n.apply(o,arguments),o.scope.$apply()};this.socket?this.socket.once(t,s):(e={event:t,cb:s},this._socketOnceListeners.push(e));var i=!1;return function(){if(!i){i=!0,o.socket.removeListener(t,s);var n=o._socketOnceListeners.indexOf(e);n>=0&&o._socketOnceListeners.splice(n,1)}}},e.prototype.emit=function(){if(!this.socket)return this;var t=this,n=Array.prototype.slice.apply(arguments);if("function"==typeof arguments[arguments.length-1]){var e=n[n.length-1];n[n.length-1]=function(){e.apply(t,arguments),t.scope.$apply()}}return this.socket.emit.apply(this.socket,n),this}},{}]},{},[1]);